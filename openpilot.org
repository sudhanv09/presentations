:REVEAL_PROPERTIES:
#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js
#+REVEAL_REVEAL_JS_VERSION: 4
#+REVEAL_THEME: league
#+REVEAL_INIT_OPTIONS: transition: 'concave'
#+OPTIONS: timestamp:nil toc:1 num:nil
:END:

#+title: OpenPilot: An OSS Driving Agent
#+AUTHOR: Sudhanv Apte

* Introduction
#  - OpenPilot is a level 2 driving agent
#  - Retrofitted to the car
#  - Designed to drive like a human
# [[./assets/openpilot/openpilot.gif]]

 #+REVEAL_HTML: <div style="width:50%;float:right">
 #+REVEAL_HTML:
 #+REVEAL_HTML: <img src="assets/openpilot/openpilot.gif" style="width: 100%">
 #+REVEAL_HTML: </div>
 #+REVEAL_HTML: <div style="width:50%;float: right">
 #+REVEAL_HTML: <h4>&nbsp;&nbsp;Openpilot is a level 2 driving agent</h4>
 #+REVEAL_HTML: <h4>&nbsp;&nbsp;Retrofitted to the car</h4>
 #+REVEAL_HTML: <h4>&nbsp;&nbsp;Designed to drive like a human</h4>
 #+REVEAL_HTML: </div>


* How does OpenPilot work?
** How does it talk to the car?
# - Uses the CAN bus to intercept calls
# - CAN bus is a protocol through which devices can send messages to each other
# - To steer OpenPilot puts torque on the wheel
# - OpenPilot has a hardware abstraction layer to support many different cars

 #+REVEAL_HTML: <div style="width:50%;float:left">
 #+REVEAL_HTML:
 #+REVEAL_HTML: <img src="assets/openpilot/panda.png" style="width: 80%">
 #+REVEAL_HTML: </div>
 #+REVEAL_HTML: <div style="width:50%;float: left">
 #+REVEAL_HTML: <h4>&nbsp;&nbsp;Uses CAN to intercept calls</h4>
 #+REVEAL_HTML: <h4>&nbsp;&nbsp;To steer OpenPilot puts torque on the wheel</h4>
 #+REVEAL_HTML: <h4>&nbsp;&nbsp;Hardware abstraction to generalise all the cars</h4>
 #+REVEAL_HTML: </div>

** Model
# - Tries to predict where to drive
# - Outputs DESIRE(turn left, lane change, keep left, etc)
# - Uses GRU to store temporal information

 #+REVEAL_HTML: <div style="width:50%;float:right">
 #+REVEAL_HTML:
 #+REVEAL_HTML: <img src="assets/openpilot/recovery.gif" style="width: 130%">
 #+REVEAL_HTML: </div>
 #+REVEAL_HTML: <div style="width:50%;float: right">
 #+REVEAL_HTML: <h4>&nbsp;&nbsp;Tries to predict where to driver</h4>
 #+REVEAL_HTML: <h4>&nbsp;&nbsp;Outputs DESIRE</h4>
 #+REVEAL_HTML: <h4>&nbsp;&nbsp;Uses GRU to store temporal information</h4>
 #+REVEAL_HTML: </div>


** Controls
- Once the trajectory is decided, the planner executes it.
- Lateral and Longitudinal both use MPC to smoothen and optimize the plans
- Longitudinal uses the radar to estimate the lead car and computes the accelaration.
** Driver Monitoring
# - Checks if the driver is paying attention
# - Tracks face, eyes, sunglasses, etc
# - Autoilot disengages if the driver isnt paying attention

 #+REVEAL_HTML: <div style="width:50%;float:left">
 #+REVEAL_HTML:
 #+REVEAL_HTML: <img src="assets/openpilot/monitoring.png" style="width: 100%">
 #+REVEAL_HTML: </div>
 #+REVEAL_HTML: <div style="width:50%;float: left">
 #+REVEAL_HTML: <h4>&nbsp;&nbsp;Checks if driver is paying attention</h4>
 #+REVEAL_HTML: <h4>&nbsp;&nbsp;Tracks face, eyes, sunglasses</h4>
 #+REVEAL_HTML: <h4>&nbsp;&nbsp;Disengages if the driver isnt paying attention</h4>
 #+REVEAL_HTML: </div>

** Safety
- Enforces driver to pay attention
- Safety code running on the CAN interface
- Pressing Gas or Break cancels OpenPilot


* Implications
- Open source, MIT license implies anybody can fork it
- End to End replicates human driving
- Can be the android to Tesla's Autoilot
